handlers=java.util.logging.FileHandler , java.util.logging.ConsoleHandler
# io.helidon.common.HelidonConsoleHandler,
# HelidonConsoleHandler uses a SimpleFormatter subclass that replaces "!thread!" with the current thread
java.util.logging.SimpleFormatter.format=%1$tF %1$tT;%4$-7s; %5$s\n
#java.util.logging.SimpleFormatter.format=%1$tY.%1$tm.%1$td %1$tH:%1$tM:%1$tS %4$s %3$s !thread!: %5$s%6$s%n\n
#
java.util.logging.ConsoleHandler.level=FINE
java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter
java.util.logging.FileHandler.level=FINE
# java.util.logging.FileHandler.level=INFO
java.util.logging.FileHandler.pattern=logs/Visuale-%g.log
java.util.logging.FileHandler.formater=java.util.logging.SimpleFormatter
java.util.logging.FileHandler.append=false
# Write 10MB before rotating this file
java.util.logging.FileHandler.limit=10000000
# Number of rotating files to be used
java.util.logging.FileHandler.count=10
java.util.logging.FileHandler.formatter=java.util.logging.SimpleFormatter
.level=FINE
no.cantara.tools.level=FINE
com.netflix.level=WARN
io.helidon.webserver.level=INFO
io.netty.handler.codec.http.level=INFO
io.helidon.config.level=INFO
io.netty.handler.level=INFO
#io.helidon.security.level=INFO
#io.helidon.microprofile.level=INFO
io.helidon.common.level=INFO
#io.netty.level=CONFIG
